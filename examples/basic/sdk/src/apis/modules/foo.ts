// This file is auto-generated by the Rivet (https://rivet.gg) build system.
//
// Do not edit this file directly.

import * as runtime from "../../runtime";

import type { FooPingRequest, FooPingResponse } from "../../models/index";
import {
  FooPingRequestToJSON,
  FooPingResponseFromJSON,
} from "../../models/index";

import type {
  FooCreateEntryRequest,
  FooCreateEntryResponse,
} from "../../models/index";
import {
  FooCreateEntryRequestToJSON,
  FooCreateEntryResponseFromJSON,
} from "../../models/index";

import type {
  FooCallSelfRequest,
  FooCallSelfResponse,
} from "../../models/index";
import {
  FooCallSelfRequestToJSON,
  FooCallSelfResponseFromJSON,
} from "../../models/index";

import type { FooActorRequest, FooActorResponse } from "../../models/index";
import {
  FooActorRequestToJSON,
  FooActorResponseFromJSON,
} from "../../models/index";

export class Foo extends runtime.BaseAPI {
  public async ping(
    request: FooPingRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<FooPingResponse> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};
    headerParameters["Content-Type"] = "application/json";

    const response = await this.request({
      path: `/modules/foo/scripts/ping/call`,
      method: "POST",
      headers: headerParameters,
      query: queryParameters,
      body: FooPingRequestToJSON(request),
    }, initOverrides);

    return FooPingResponseFromJSON(await response.json());
  }

  public async createEntry(
    request: FooCreateEntryRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<FooCreateEntryResponse> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};
    headerParameters["Content-Type"] = "application/json";

    const response = await this.request({
      path: `/modules/foo/scripts/create_entry/call`,
      method: "POST",
      headers: headerParameters,
      query: queryParameters,
      body: FooCreateEntryRequestToJSON(request),
    }, initOverrides);

    return FooCreateEntryResponseFromJSON(await response.json());
  }

  public async callSelf(
    request: FooCallSelfRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<FooCallSelfResponse> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};
    headerParameters["Content-Type"] = "application/json";

    const response = await this.request({
      path: `/modules/foo/scripts/call_self/call`,
      method: "POST",
      headers: headerParameters,
      query: queryParameters,
      body: FooCallSelfRequestToJSON(request),
    }, initOverrides);

    return FooCallSelfResponseFromJSON(await response.json());
  }

  public async actor(
    request: FooActorRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<FooActorResponse> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};
    headerParameters["Content-Type"] = "application/json";

    const response = await this.request({
      path: `/modules/foo/scripts/actor/call`,
      method: "POST",
      headers: headerParameters,
      query: queryParameters,
      body: FooActorRequestToJSON(request),
    }, initOverrides);

    return FooActorResponseFromJSON(await response.json());
  }
}
