// This file is auto-generated by the Rivet (https://rivet.gg) build system.
//
// Do not edit this file directly.

import * as runtime from "../../runtime";

import type {
  FriendsSendRequestRequest,
  FriendsSendRequestResponse,
} from "../../models/index";
import {
  FriendsSendRequestRequestToJSON,
  FriendsSendRequestResponseFromJSON,
} from "../../models/index";

import type {
  FriendsAcceptRequestRequest,
  FriendsAcceptRequestResponse,
} from "../../models/index";
import {
  FriendsAcceptRequestRequestToJSON,
  FriendsAcceptRequestResponseFromJSON,
} from "../../models/index";

import type {
  FriendsDeclineRequestRequest,
  FriendsDeclineRequestResponse,
} from "../../models/index";
import {
  FriendsDeclineRequestRequestToJSON,
  FriendsDeclineRequestResponseFromJSON,
} from "../../models/index";

import type {
  FriendsRemoveFriendRequest,
  FriendsRemoveFriendResponse,
} from "../../models/index";
import {
  FriendsRemoveFriendRequestToJSON,
  FriendsRemoveFriendResponseFromJSON,
} from "../../models/index";

import type {
  FriendsListFriendsRequest,
  FriendsListFriendsResponse,
} from "../../models/index";
import {
  FriendsListFriendsRequestToJSON,
  FriendsListFriendsResponseFromJSON,
} from "../../models/index";

import type {
  FriendsListOutgoingFriendRequestsRequest,
  FriendsListOutgoingFriendRequestsResponse,
} from "../../models/index";
import {
  FriendsListOutgoingFriendRequestsRequestToJSON,
  FriendsListOutgoingFriendRequestsResponseFromJSON,
} from "../../models/index";

import type {
  FriendsListIncomingFriendRequestsRequest,
  FriendsListIncomingFriendRequestsResponse,
} from "../../models/index";
import {
  FriendsListIncomingFriendRequestsRequestToJSON,
  FriendsListIncomingFriendRequestsResponseFromJSON,
} from "../../models/index";

export class Friends extends runtime.BaseAPI {
  public async sendRequest(
    request: FriendsSendRequestRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<FriendsSendRequestResponse> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};
    headerParameters["Content-Type"] = "application/json";

    const response = await this.request({
      path: `/modules/friends/scripts/send_request/call`,
      method: "POST",
      headers: headerParameters,
      query: queryParameters,
      body: FriendsSendRequestRequestToJSON(request),
    }, initOverrides);

    return FriendsSendRequestResponseFromJSON(await response.json());
  }

  public async acceptRequest(
    request: FriendsAcceptRequestRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<FriendsAcceptRequestResponse> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};
    headerParameters["Content-Type"] = "application/json";

    const response = await this.request({
      path: `/modules/friends/scripts/accept_request/call`,
      method: "POST",
      headers: headerParameters,
      query: queryParameters,
      body: FriendsAcceptRequestRequestToJSON(request),
    }, initOverrides);

    return FriendsAcceptRequestResponseFromJSON(await response.json());
  }

  public async declineRequest(
    request: FriendsDeclineRequestRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<FriendsDeclineRequestResponse> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};
    headerParameters["Content-Type"] = "application/json";

    const response = await this.request({
      path: `/modules/friends/scripts/decline_request/call`,
      method: "POST",
      headers: headerParameters,
      query: queryParameters,
      body: FriendsDeclineRequestRequestToJSON(request),
    }, initOverrides);

    return FriendsDeclineRequestResponseFromJSON(await response.json());
  }

  public async removeFriend(
    request: FriendsRemoveFriendRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<FriendsRemoveFriendResponse> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};
    headerParameters["Content-Type"] = "application/json";

    const response = await this.request({
      path: `/modules/friends/scripts/remove_friend/call`,
      method: "POST",
      headers: headerParameters,
      query: queryParameters,
      body: FriendsRemoveFriendRequestToJSON(request),
    }, initOverrides);

    return FriendsRemoveFriendResponseFromJSON(await response.json());
  }

  public async listFriends(
    request: FriendsListFriendsRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<FriendsListFriendsResponse> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};
    headerParameters["Content-Type"] = "application/json";

    const response = await this.request({
      path: `/modules/friends/scripts/list_friends/call`,
      method: "POST",
      headers: headerParameters,
      query: queryParameters,
      body: FriendsListFriendsRequestToJSON(request),
    }, initOverrides);

    return FriendsListFriendsResponseFromJSON(await response.json());
  }

  public async listOutgoingFriendRequests(
    request: FriendsListOutgoingFriendRequestsRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<FriendsListOutgoingFriendRequestsResponse> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};
    headerParameters["Content-Type"] = "application/json";

    const response = await this.request({
      path: `/modules/friends/scripts/list_outgoing_friend_requests/call`,
      method: "POST",
      headers: headerParameters,
      query: queryParameters,
      body: FriendsListOutgoingFriendRequestsRequestToJSON(request),
    }, initOverrides);

    return FriendsListOutgoingFriendRequestsResponseFromJSON(
      await response.json(),
    );
  }

  public async listIncomingFriendRequests(
    request: FriendsListIncomingFriendRequestsRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<FriendsListIncomingFriendRequestsResponse> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};
    headerParameters["Content-Type"] = "application/json";

    const response = await this.request({
      path: `/modules/friends/scripts/list_incoming_friend_requests/call`,
      method: "POST",
      headers: headerParameters,
      query: queryParameters,
      body: FriendsListIncomingFriendRequestsRequestToJSON(request),
    }, initOverrides);

    return FriendsListIncomingFriendRequestsResponseFromJSON(
      await response.json(),
    );
  }
}
