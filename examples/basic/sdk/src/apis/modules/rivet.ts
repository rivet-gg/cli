// This file is auto-generated by the Rivet (https://rivet.gg) build system.
//
// Do not edit this file directly.

import * as runtime from "../../runtime";

import type { RivetCallRequest, RivetCallResponse } from "../../models/index";
import {
  RivetCallRequestToJSON,
  RivetCallResponseFromJSON,
} from "../../models/index";

import type {
  RivetFetchConfigRequest,
  RivetFetchConfigResponse,
} from "../../models/index";
import {
  RivetFetchConfigRequestToJSON,
  RivetFetchConfigResponseFromJSON,
} from "../../models/index";

export class Rivet extends runtime.BaseAPI {
  public async call(
    request: RivetCallRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<RivetCallResponse> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};
    headerParameters["Content-Type"] = "application/json";

    const response = await this.request({
      path: `/modules/rivet/scripts/call/call`,
      method: "POST",
      headers: headerParameters,
      query: queryParameters,
      body: RivetCallRequestToJSON(request),
    }, initOverrides);

    return RivetCallResponseFromJSON(await response.json());
  }

  public async fetchConfig(
    request: RivetFetchConfigRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<RivetFetchConfigResponse> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};
    headerParameters["Content-Type"] = "application/json";

    const response = await this.request({
      path: `/modules/rivet/scripts/fetch_config/call`,
      method: "POST",
      headers: headerParameters,
      query: queryParameters,
      body: RivetFetchConfigRequestToJSON(request),
    }, initOverrides);

    return RivetFetchConfigResponseFromJSON(await response.json());
  }
}
