// This file is auto-generated by the Open Game Backend (https://opengb.dev) build system.
//
// Do not edit this file directly.
//
// Generated at 2024-09-06T09:55:47.499Z

import {
	ActorContext as ActorContextInner,
	ModuleContext as ModuleContextInner,
	ModuleContextParams as ModuleContextParamsInner,
	RouteContext as RouteContextInner,
	Runtime,
	ScriptContext as ScriptContextInner,
	TestContext as TestContextInner,
} from "../../.opengb/runtime/packages/runtime/mod.ts";
import config from "../../.opengb/runtime_config.ts";
import { dependencyCaseConversionMap } from "../../.opengb/dependencyCaseConversion.ts";
import { actorCaseConversionMap } from "../../.opengb/actorCaseConversion.ts";
import { ActorDriver } from "../../.opengb/runtime/packages/runtime/actor/drivers/memory/driver.ts";
export * from "../../.opengb/runtime/packages/runtime/export_to_module.ts";

import { Config as UserConfig } from "./config.ts";

export * as Module from "../../.opengb/public/external_config_test.ts";

import type {
	DependenciesCamel as DependenciesCamelFull,
	DependenciesSnake as DependenciesSnakeFull,
} from "../../.opengb/dependencies.d.ts";

interface DependenciesSnake {
	config_test: DependenciesSnakeFull["config_test"];
}

interface DependenciesCamel {
	configTest: DependenciesCamelFull["configTest"];
}

import type {
	ActorsCamel as ActorsCamelFull,
	ActorsSnake as ActorsSnakeFull,
} from "../../.opengb/actors.d.ts";

type ActorsSnake = ActorsSnakeFull["config_test"];
type ActorsCamel = ActorsCamelFull["configTest"];

interface ModuleContextParams extends ModuleContextParamsInner {
	dependenciesSnake: DependenciesSnake;
	dependenciesCamel: DependenciesCamel;
	actorsSnake: ActorsSnake;
	actorsCamel: ActorsCamel;
	userConfig: UserConfig;
	databaseSchema: undefined;
}

export type ModuleContext = ModuleContextInner<ModuleContextParams>;

export type TestContext = TestContextInner<ModuleContextParams>;

export type TestFn = (ctx: TestContext) => Promise<void>;

export function test(name: string, fn: TestFn) {
	Runtime.test(
		config,
		new ActorDriver(
			Deno.env,
			config,
			dependencyCaseConversionMap,
			actorCaseConversionMap,
		),
		"config_test",
		name,
		fn,
		dependencyCaseConversionMap,
		actorCaseConversionMap,
	);
}

export type ScriptContext = ScriptContextInner<ModuleContextParams>;

export type RouteContext = RouteContextInner<ModuleContextParams>;

export type RouteRequest = Request;
export const RouteRequest = Request;

export type RouteResponse = Response;
export const RouteResponse = Response;

export type ActorContext = ActorContextInner<ModuleContextParams>;
